local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")

local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

local GardenGame = Workspace:FindFirstChild("GardenGame") or Workspace:WaitForChild("GardenGame")
local Remotes = ReplicatedStorage:FindFirstChild("Remotes") or ReplicatedStorage:WaitForChild("Remotes")

local GetFruitRemote
local AscendRemote
local GetPlayerDataRemote

for _, remote in pairs(Remotes:GetChildren()) do
    if remote.Name:lower():find("fruit") or remote.Name:lower():find("collect") then
        GetFruitRemote = remote
    elseif remote.Name:lower():find("ascend") then
        AscendRemote = remote
    elseif remote.Name:lower():find("player") or remote.Name:lower():find("data") then
        GetPlayerDataRemote = remote
    end
end

local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "GardenAutoFarm"
ScreenGui.Parent = PlayerGui

local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, 300, 0, 200)
MainFrame.Position = UDim2.new(0.5, -150, 0.5, -100)
MainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
MainFrame.Parent = ScreenGui

local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(1, 0, 0, 30)
Title.Text = "Garden Auto Farmer"
Title.BackgroundColor3 = Color3.fromRGB(45, 45, 55)
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.Parent = MainFrame

local StartButton = Instance.new("TextButton")
StartButton.Size = UDim2.new(0, 120, 0, 40)
StartButton.Position = UDim2.new(0.5, -60, 0.3, 0)
StartButton.Text = "START FARMING"
StartButton.BackgroundColor3 = Color3.fromRGB(60, 180, 80)
StartButton.TextColor3 = Color3.fromRGB(255, 255, 255)
StartButton.Parent = MainFrame

local StatusLabel = Instance.new("TextLabel")
StatusLabel.Size = UDim2.new(1, 0, 0, 30)
StatusLabel.Position = UDim2.new(0, 0, 0.7, 0)
StatusLabel.Text = "Status: Ready"
StatusLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
StatusLabel.BackgroundTransparency = 1
StatusLabel.Parent = MainFrame

local CloseButton = Instance.new("TextButton")
CloseButton.Size = UDim2.new(0, 30, 0, 30)
CloseButton.Position = UDim2.new(1, -35, 0, 5)
CloseButton.Text = "X"
CloseButton.BackgroundColor3 = Color3.fromRGB(180, 60, 60)
CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CloseButton.Parent = MainFrame

local PlayerData = {
    Fruits = {},
    AscensionLevel = 0,
    RequiredFruits = {}
}

local function UpdateStatus(message)
    StatusLabel.Text = "Status: " .. message
end

local function FetchPlayerData()
    pcall(function()
        if GetPlayerDataRemote then
            PlayerData = GetPlayerDataRemote:InvokeServer() or PlayerData
        end
        
        local stats = LocalPlayer:FindFirstChild("leaderstats")
        if stats then
            for _, stat in pairs(stats:GetChildren()) do
                if stat.Name:lower():find("fruit") then
                    PlayerData.Fruits[stat.Name] = stat.Value
                elseif stat.Name:lower():find("ascend") then
                    PlayerData.AscensionLevel = stat.Value
                end
            end
        end
        
        PlayerData.RequiredFruits = {
            Apple = 25 + (PlayerData.AscensionLevel * 10),
            Orange = 20 + (PlayerData.AscensionLevel * 8),
            Banana = 15 + (PlayerData.AscensionLevel * 6)
        }
    end)
end

local function CanAscend()
    for fruit, required in pairs(PlayerData.RequiredFruits) do
        if (PlayerData.Fruits[fruit] or 0) < required then
            return false, fruit
        end
    end
    return true
end

local function CollectFruits()
    UpdateStatus("Collecting fruits...")
    
    local fruits = Workspace:FindFirstChild("Fruits") or Workspace:WaitForChild("Fruits")
    if not fruits then
        UpdateStatus("No fruits found!")
        return false
    end
    
    local collected = 0
    for _, fruit in pairs(fruits:GetChildren()) do
        if fruit:IsA("BasePart") and fruit.Name:find("Fruit") then
            pcall(function()
                if GetFruitRemote then
                    GetFruitRemote:FireServer(fruit.Name)
                    collected = collected + 1
                    task.wait(0.1)
                end
            end)
        end
    end
    
    UpdateStatus("Collected " .. collected .. " fruits")
    return collected > 0
end

local function AutoAscend()
    local canAscend, missingFruit = CanAscend()
    
    if canAscend then
        UpdateStatus("Ascending...")
        pcall(function()
            if AscendRemote then
                AscendRemote:FireServer()
                UpdateStatus("Ascension complete! Level " .. (PlayerData.AscensionLevel + 1))
                task.wait(2)
                return true
            end
        end)
    else
        UpdateStatus("Need more " .. (missingFruit or "fruits"))
        return false
    end
end

local Farming = false
local function StartFarming()
    if Farming then return end
    Farming = true
    
    while Farming do
        FetchPlayerData()
        
        if AutoAscend() then
            task.wait(5)
            continue
        end
        
        if not CollectFruits() then
            UpdateStatus("Waiting for fruits to spawn...")
            task.wait(3)
        end
        
        task.wait(1)
    end
end

StartButton.MouseButton1Click:Connect(function()
    if not Farming then
        StartButton.Text = "STOP FARMING"
        StartButton.BackgroundColor3 = Color3.fromRGB(180, 60, 60)
        task.spawn(StartFarming)
    else
        Farming = false
        StartButton.Text = "START FARMING"
        StartButton.BackgroundColor3 = Color3.fromRGB(60, 180, 80)
        UpdateStatus("Stopped")
    end
end)

CloseButton.MouseButton1Click:Connect(function()
    Farming = false
    ScreenGui:Destroy()
end)

local dragging, dragInput, dragStart
Title.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = MainFrame.Position
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

Title.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

game:GetService("UserInputService").InputChanged:Connect(function(input)
    if dragging and input == dragInput then
        local delta = input.Position - dragStart
        MainFrame.Position = UDim2.new(
            startPos.X.Scale,
            startPos.X.Offset + delta.X,
            startPos.Y.Scale,
            startPos.Y.Offset + delta.Y
        )
    end
end)

UpdateStatus("Ready to farm! Click START")
FetchPlayerData()
